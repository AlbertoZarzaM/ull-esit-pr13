{"/home/usuario/theory-examples/src/index.ts":{"path":"/home/usuario/theory-examples/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"3":{"start":{"line":15,"column":8},"end":{"line":15,"column":17}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":32}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}},"6":{"start":{"line":31,"column":4},"end":{"line":31,"column":19}},"7":{"start":{"line":33,"column":0},"end":{"line":33,"column":18}}},"fnMap":{"0":{"name":"factorial","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":18}},"loc":{"start":{"line":13,"column":22},"end":{"line":18,"column":1}},"line":13},"1":{"name":"add","decl":{"start":{"line":30,"column":9},"end":{"line":30,"column":12}},"loc":{"start":{"line":30,"column":21},"end":{"line":32,"column":1}},"line":30}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},{"start":{"line":14,"column":4},"end":{"line":16,"column":5}}],"line":14}},"s":{"0":1,"1":1,"2":7,"3":2,"4":5,"5":1,"6":2,"7":1},"f":{"0":7,"1":2},"b":{"0":[2,5]},"inputSourceMap":{"version":3,"file":"/home/usuario/theory-examples/src/index.ts","sources":["/home/usuario/theory-examples/src/index.ts"],"names":[],"mappings":";;;AACA;;;;;;;;GAQG;AACH,SAAgB,SAAS,CAAC,CAAS;IACjC,IAAI,CAAC,KAAK,CAAC,EAAE;QACX,OAAO,CAAC,CAAC;KACV;IACD,OAAO,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9B,CAAC;AALD,8BAKC;AAED;;;;;;;;;GASG;AACH,SAAgB,GAAG,CAAC,EAAU,EAAE,EAAU;IACxC,OAAO,EAAE,GAAG,EAAE,CAAC;AACjB,CAAC;AAFD,kBAEC","sourcesContent":["\n/**\n * _Calculates the factorial of a number_\n * @param n The number for which we want to calculate its factorial\n * @returns The factorial of n\n * ```ts\n * factorial(1)\n * factorial(10)\n * ```\n */\nexport function factorial(n: number): number {\n  if (n === 1) {\n    return 1;\n  }\n  return n * factorial(n - 1);\n}\n\n/**\n * _Calculates the addition of two numbers_\n * @param n1 First operand of addition\n * @param n2 Second operand of addition\n * @returns The addition of n1 and n2\n * ```ts\n * add(3, 5)\n * add(7.6, -3.5)\n * ```\n */\nexport function add(n1: number, n2: number) {\n  return n1 + n2;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3dbf182fa2d2daef63d6c57369909d58577e2b2a","contentHash":"1a6b09ed11826e7774ace026e963508841b48a4d6aa0197d598ec0dce47b6834"}}